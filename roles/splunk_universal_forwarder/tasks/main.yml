---
- include_tasks: ../../../roles/splunk_common/tasks/set_as_hec_receiver.yml
  when:
    - not splunk.hec_disabled | bool
    - splunk.hec_token is defined and splunk.hec_token != None

# Setup deployment server
# http://docs.splunk.com/Documentation/Splunk/latest/Updating/Configuredeploymentclients
- name: Add a deployment server
  command: "{{splunk.exec}} set deploy-poll {{ splunk.deployment_server }}:{{ splunk.s2s_port }} -auth admin:{{ splunk.password }}"
  become: yes
  become_user: "{{ splunk.user }}"
  register: task_result
  until: task_result.rc == 0
  retries: "{{retry_num}}"
  delay: "{{ delay_num }}"
  when: splunk.deployment_server is defined
  ignore_errors: true
  notify:
    - Restart the splunkd service
  no_log: "{{ hide_password }}"
  
- include_tasks: ../../../roles/splunk_common/tasks/enable_forwarding.yml

- include_tasks: setup_docker_monitoring.yml
  when:
    - docker_monitoring
  ignore_errors: true

# Setup deployment server
# http://docs.splunk.com/Documentation/Splunk/latest/Updating/Configuredeploymentclients
- name: Add a deployment server
  command: "{{splunk.exec}} set deploy-poll {{ splunk.deployment_server }}:{{ splunk.s2s_port }} -auth admin:{{ splunk.password }}"
  become: yes
  become_user: "{{ splunk.user }}"
  register: task_result
  until: task_result.rc == 0
  retries: "{{retry_num}}"
  delay: "{{ delay_num }}"
  when: splunk.deployment_server is defined
  ignore_errors: true
  notify:
    - Restart the splunkd service
  no_log: "{{ hide_password }}"

- name: Flush restart handlers
  meta: flush_handlers

- include_tasks: ../../splunk_common/tasks/add_splunk_object.yml
  when: splunk.add is defined
  
- include_tasks: ../../../roles/splunk_common/tasks/provision_apps.yml
  when: 
    - splunk.apps_location

# Execute other Splunk commands
- name: Execute Splunk commands
  command: "{{splunk.exec}} {{ item }} -auth admin:{{ splunk.password }}"
  become: yes
  become_user: "{{ splunk.user }}"
  with_items: "{{ splunk.cmd }}"
  register: task_result
  until: task_result.rc == 0 or "already exists" in task_result.stderr
  retries: "{{ retry_num }}"
  delay: "{{ delay_num }}"
  when: splunk.cmd is defined
  no_log: "{{ hide_password }}"
  ignore_errors: true
  notify:
    - Restart the splunkd service

- include_tasks: ../../../roles/splunk_common/tasks/check_for_required_restarts.yml
