---
- name: "Check for existing installation"
  stat:
    path: "{{ splunk.exec }}"
  register: pre_existing_splunk

- name: "Set first run fact"
  set_fact:
    first_run: "{{ not pre_existing_splunk.stat.exists | default(True) }}"

- name: "Check if we are in a docker"
  stat:
    path: "/.dockerenv"
  register: docker_env

- name: "Set docker fact"
  set_fact:
    is_docker: "{{ docker_env.stat.exists | default(False) }}"

- name: "Set target version fact"
  set_fact:
    splunk_target_version: "{{ splunk.build_location | regex_search(regexp, '\\1\\2\\3') | default('0') }}"
  vars:
    regexp: 'splunk(?:forwarder)?-(\d)\.(\d)\.(\d)-'

- name: "Find manifests"
  find:
    paths: "{{ splunk.home }}"
    patterns: ".*-manifest$"
    use_regex: yes
  register: manifests

- name: "Set current version fact"
  set_fact:
    splunk_current_version: "{{ manifests.files[0].path | regex_search(regexp, '\\1\\2\\3') if (manifests.matched == 1) else '0' }}"
  vars:
    regexp: 'splunk(?:forwarder)?-(\d)\.(\d)\.(\d)-'

- name: "Setting upgrade fact"
  set_fact:
    splunk_upgrade: "{{ not first_run and splunk_target_version != splunk_current_version | default(False) }}"
