---
- name: Download Splunk license
  get_url:
    url: "{{ splunk.license_uri }}"
    dest: /tmp/splunk.lic
    timeout: 20
  when:
    - splunk.license_uri is defined
    - splunk.license_uri is search("^http.*")
    - splunk.role == "splunk_license_master" or not splunk.license_master_included
  register: download_lic
  until: download_lic is success
  retries: 5
  delay: 3

- name: Set downloaded license location
  set_fact:
    splunk_license_local_path: /tmp/splunk.lic
  when:
    - splunk.license_uri is defined
    - splunk.license_uri is search("^http.*")
    - download_lic is success
    - splunk.role == "splunk_license_master" or not splunk.license_master_included

- name: Set local license location
  set_fact:
    splunk_license_local_path: "{{ splunk.license_uri }}"
  when:
    - splunk_license_local_path is not defined
    - splunk.role == "splunk_license_master" or not splunk.license_master_included

- name: Apply Splunk license
  command: "{{ splunk.exec }} add licenses {{ splunk_license_local_path }} -auth admin:{{ splunk.password }}"
  become: yes
  become_user: "{{ splunk.user }}"
  when:
    - splunk.license_uri is defined
    - splunk_license_local_path is defined and splunk_license_local_path != ""
    - splunk.role == "splunk_license_master" or not splunk.license_master_included
  ignore_errors: true
  notify:
    - Restart the splunkd service
  no_log: "{{ hide_password }}"

- name: Set as license slave
  include_tasks: set_as_license_slave.yml
  vars:
    license_master_host: "{{ groups.splunk_license_master[0] }}"
  when:
    - splunk.license_master_included | bool
    - splunk.role != "splunk_license_master"

- name: Flush handlers
  meta: flush_handlers
