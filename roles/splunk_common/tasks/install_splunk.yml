---
- name: Remove old manifest files
  file:
    path: "{{ item.path }}"
    state: "absent"
  ignore_errors: yes
  become: yes
  become_user: "{{ privileged_user }}"
  with_items:
  - "{{ manifests.files }}"
  when:
  - splunk_upgrade | bool

- name: Download Splunk package (Windows)
  get_url:
    url: "{{ splunk.build_location }}"
    dest: "/tmp/"
    mode: 0777
    timeout: 600
    force: true
  register: download_result
  until: download_result is succeeded
  retries: 5
  delay: 10
  when:
  - splunk.build_location | regex_search("^(http).*")
  - ansible_system is match("CYGWIN*|Win32NT")

- name: Find installer file
  set_fact:
    installer_file: "{% if splunk.build_location | regex_search('^(http).*') %}{{ download_result.dest }}{% else %}{{ splunk.build_location }}{% endif %}"

- name: Set installer path (Windows)
  set_fact:
    installer_path: "C:\\\\tmp\\\\{{ installer_file }}"

- name: Install Splunk (Linux)
  unarchive:
    src: "{{ splunk.build_location }}"
    dest: "{{ splunk.opt }}"
    owner: "{{ splunk.user }}"
    group: "{{ splunk.group }}"
    remote_src: "{{ splunk.build_remote_src }}"
  when: ansible_system is match("Linux")
  register: install_result
  until: install_result is succeeded
  retries: "{{ retry_num }}"
  delay: 3

- name: Install Splunk (Windows)
  command: "msiexec /I {{ installer_path }} AGREETOLICENSE=yes SPLUNKUSERNAME={{ splunk.admin_user }} SPLUNKPASSWORD={{ splunk.password }} LAUNCHSPLUNK=0 INSTALLDIR=C:\\\\opt\\\\{{ splunk.tar_dir }} /passive /qn"
  when: ansible_system is match("CYGWIN*|Win32NT")
  register: install_result
  until: install_result is succeeded
  retries: "{{ retry_num }}"
  delay: 3

- name: Remove installers
  file:
    dest: "{{ item }}"
    state: "absent"
  ignore_errors: yes
  become: yes
  become_user: "{{ privileged_user }}"
  when: ansible_system is match("Linux") or (uninstall_result is defined and uninstall_result | bool)
  with_items:
  - "{{ installer_file }}"
  - "{{ splunk.build_location }}"
