---
- name: Get indexer count
  set_fact:
    num_indexer_hosts: "{{ groups['splunk_indexer'] | length }}"

- name: Lower indexer search/replication factor
  set_fact:
    splunk:
      idxc:
        search_factor: 1
        replication_factor: 1
  when: num_indexer_hosts|int < 3

- name: Set indexer discovery
  uri:
    url: "https://127.0.0.1:{{ splunk.svc_port }}/servicesNS/nobody/system/configs/conf-server"
    method: POST
    user: admin
    password: "{{ splunk.password }}"
    validate_certs: False
    body: "name=indexer_discovery&pass4SymmKey={{ splunk.shc.secret }}"
    body_format: json
    headers:
      Content-Type: "application/x-www-form-urlencoded"
    status_code: 201,409
    timeout: 10
  register: set_indexer_discovery
  changed_when: set_indexer_discovery.status == 201
  no_log: "{{ hide_password }}"

- include_tasks: enable_smartstore.yml
  when: splunk.smartstore

- name: Set the current node as a Splunk indexer cluster master
  command: "{{ splunk.exec }} edit cluster-config -mode master -replication_factor {{ splunk.idxc.replication_factor }} -search_factor {{ splunk.idxc.search_factor }} -secret '{{ splunk.idxc.secret }}' -cluster_label '{{ splunk.idxc.label }}' -auth 'admin:{{ splunk.password }}'"
  register: task_result
  until: task_result.rc == 0
  retries: "{{ retry_num }}"
  delay: 3
  notify:
    - Restart the splunkd service
  become: yes
  become_user: "{{ splunk.user }}"
  no_log: "{{ hide_password }}"

- name: Flush restart handlers
  meta: flush_handlers

# Fails if a cluster bundle did not already exist and yet we did not apply a new bundle.
# The failed condition is basically eventHasError && bundleNotAlreadyExists. 
# The changed condition is basically !eventHasError && bundleNotAlreadyExists.
#
# Stderr/Stdout cases are:
# 1) The cluster bundle already exists on the indexers. Then stderr will contain the message
# "...bundle already exists" and we should *not* mark the play as either failed or changed.
#
# 2) The cluster bundle does not exist on the indexers but an error occurred during bundle
# application. Then stderr will NOT contain the word "already" and stdout will contain an error
# message such as "Error occurred when applying cluster bundle", "sh: invalid operation, exit code 1"
# or no message at all.
#
# 3) The cluster bundle does not exist and we successfully applied the cluster bundle. Then stdout
# will contain something to the effect of "Applying new bundle. Restarting indexers..". Thus, we
- name: Apply the cluster bundle to the Splunk cluster master
  command: "{{ splunk.exec }} apply cluster-bundle -auth admin:{{ splunk.password }} --skip-validation --answer-yes"
  become: yes
  become_user: "{{ splunk.user }}"
  register: splunk_cluster_bundle_result
  failed_when: >
    ((splunk_cluster_bundle_result.stdout is not search("[Aa]pply"))
      or ("bundle" not in splunk_cluster_bundle_result.stdout)
      or (splunk_cluster_bundle_result.stdout is search("[Ee]rror")))
    and ("already" not in splunk_cluster_bundle_result.stderr)
  changed_when: >
    ((splunk_cluster_bundle_result.stdout is search("[Aa]pply"))
      and ("bundle" in splunk_cluster_bundle_result.stdout)
      and (splunk_cluster_bundle_result.stdout is not search("[Ee]rror")))
    and ("already" not in splunk_cluster_bundle_result.stderr)
  no_log: "{{ hide_password }}"
  

- debug: var=splunk_cluster_bundle_result.stdout
- debug: var=splunk_cluster_bundle_result.stderr

- include_tasks: ../../../roles/splunk_common/tasks/enable_forwarding.yml
